- name: user
  hosts: user
  become: yes 
  tasks:
    - name: Disable old NodeJS and enable NodeJS 18
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

    - name: Install nodeJS 18
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: Add roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download User Application
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/user.zip
        dest: /tmp/

    - name: unzipping https://roboshop-builds.s3.amazonaws.com/user.zip
      ansible.builtin.unarchive:
        src: /tmp/user.zip
        dest: /app
        remote_src: yes 

    - name: Install dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: copy user.service
      ansible.builtin.copy:
        src: user.service
        dest: /etc/systemd/system/user.service

    - name: Daemon Reload
      ansible.builtin.systemd_service:
        daemon_reload: true 
      
    - name: copy mongodb repo
      ansible.builtin.copy:
        src: mongodb.repo 
        dest: /etc/yum.repos.d/mongodb.repo

    - name: Install mongodb client
      ansible.builtin.shell: dnf install mongodb-org-shell -y

    - name: get the user count
      ansible.builtin.command: mongo --host mongodb.learndevops.space --quiet --eval 'db = db.getSiblingDB("user"); db.products.count()'
      register: user_count

    - name: Print the count
      ansible.builtin.debug:
        msg: "User count is: {{product_count}}"

    - name: load user application into mongodb 
      ansible.builtin.command: mongo --host mongodb.learndevops.space < /app/schema/user.js
      when: user_count.stdout == "0"

    - name: Enable and Restart User
      ansible.builtin.service:
        name: User
        enabled: yes 
        state: restarted 
